//
// This file is part of Celestial (https://github.com/OpenFogStack/celestial).
// Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, version 3.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: database.proto

package database

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{0}
}

type ConstellationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model          string             `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Shells         uint32             `protobuf:"varint,2,opt,name=shells,proto3" json:"shells,omitempty"`
	Groundstations []*GroundStationId `protobuf:"bytes,3,rep,name=groundstations,proto3" json:"groundstations,omitempty"`
}

func (x *ConstellationInfo) Reset() {
	*x = ConstellationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstellationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstellationInfo) ProtoMessage() {}

func (x *ConstellationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstellationInfo.ProtoReflect.Descriptor instead.
func (*ConstellationInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{1}
}

func (x *ConstellationInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ConstellationInfo) GetShells() uint32 {
	if x != nil {
		return x.Shells
	}
	return 0
}

func (x *ConstellationInfo) GetGroundstations() []*GroundStationId {
	if x != nil {
		return x.Groundstations
	}
	return nil
}

type ShellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shell uint32 `protobuf:"varint,1,opt,name=shell,proto3" json:"shell,omitempty"`
}

func (x *ShellRequest) Reset() {
	*x = ShellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellRequest) ProtoMessage() {}

func (x *ShellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellRequest.ProtoReflect.Descriptor instead.
func (*ShellRequest) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{2}
}

func (x *ShellRequest) GetShell() uint32 {
	if x != nil {
		return x.Shell
	}
	return 0
}

type SGP4Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Starttime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Model     string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Mode      string                 `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Bstar     float64                `protobuf:"fixed64,4,opt,name=bstar,proto3" json:"bstar,omitempty"`
	Ndot      float64                `protobuf:"fixed64,5,opt,name=ndot,proto3" json:"ndot,omitempty"`
	Argpo     float64                `protobuf:"fixed64,6,opt,name=argpo,proto3" json:"argpo,omitempty"`
}

func (x *SGP4Options) Reset() {
	*x = SGP4Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGP4Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGP4Options) ProtoMessage() {}

func (x *SGP4Options) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGP4Options.ProtoReflect.Descriptor instead.
func (*SGP4Options) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{3}
}

func (x *SGP4Options) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *SGP4Options) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SGP4Options) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *SGP4Options) GetBstar() float64 {
	if x != nil {
		return x.Bstar
	}
	return 0
}

func (x *SGP4Options) GetNdot() float64 {
	if x != nil {
		return x.Ndot
	}
	return 0
}

func (x *SGP4Options) GetArgpo() float64 {
	if x != nil {
		return x.Argpo
	}
	return 0
}

type NetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bandwidth                   uint32  `protobuf:"varint,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Islpropagation              float64 `protobuf:"fixed64,2,opt,name=islpropagation,proto3" json:"islpropagation,omitempty"`
	Mincommsaltitude            uint32  `protobuf:"varint,3,opt,name=mincommsaltitude,proto3" json:"mincommsaltitude,omitempty"`
	Minelevation                float64 `protobuf:"fixed64,4,opt,name=minelevation,proto3" json:"minelevation,omitempty"`
	Gstpropagation              float64 `protobuf:"fixed64,5,opt,name=gstpropagation,proto3" json:"gstpropagation,omitempty"`
	Groundstationconnectiontype string  `protobuf:"bytes,6,opt,name=groundstationconnectiontype,proto3" json:"groundstationconnectiontype,omitempty"`
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkConfig) GetBandwidth() uint32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *NetworkConfig) GetIslpropagation() float64 {
	if x != nil {
		return x.Islpropagation
	}
	return 0
}

func (x *NetworkConfig) GetMincommsaltitude() uint32 {
	if x != nil {
		return x.Mincommsaltitude
	}
	return 0
}

func (x *NetworkConfig) GetMinelevation() float64 {
	if x != nil {
		return x.Minelevation
	}
	return 0
}

func (x *NetworkConfig) GetGstpropagation() float64 {
	if x != nil {
		return x.Gstpropagation
	}
	return 0
}

func (x *NetworkConfig) GetGroundstationconnectiontype() string {
	if x != nil {
		return x.Groundstationconnectiontype
	}
	return ""
}

type ComputeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vcpu   uint32 `protobuf:"varint,1,opt,name=vcpu,proto3" json:"vcpu,omitempty"`
	Mem    uint32 `protobuf:"varint,2,opt,name=mem,proto3" json:"mem,omitempty"`
	Ht     bool   `protobuf:"varint,3,opt,name=ht,proto3" json:"ht,omitempty"`
	Disk   uint32 `protobuf:"varint,4,opt,name=disk,proto3" json:"disk,omitempty"`
	Kernel string `protobuf:"bytes,5,opt,name=kernel,proto3" json:"kernel,omitempty"`
	Rootfs string `protobuf:"bytes,6,opt,name=rootfs,proto3" json:"rootfs,omitempty"`
}

func (x *ComputeConfig) Reset() {
	*x = ComputeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeConfig) ProtoMessage() {}

func (x *ComputeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeConfig.ProtoReflect.Descriptor instead.
func (*ComputeConfig) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{5}
}

func (x *ComputeConfig) GetVcpu() uint32 {
	if x != nil {
		return x.Vcpu
	}
	return 0
}

func (x *ComputeConfig) GetMem() uint32 {
	if x != nil {
		return x.Mem
	}
	return 0
}

func (x *ComputeConfig) GetHt() bool {
	if x != nil {
		return x.Ht
	}
	return false
}

func (x *ComputeConfig) GetDisk() uint32 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *ComputeConfig) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *ComputeConfig) GetRootfs() string {
	if x != nil {
		return x.Rootfs
	}
	return ""
}

type ShellInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planes               uint32         `protobuf:"varint,1,opt,name=planes,proto3" json:"planes,omitempty"`
	Sats                 uint32         `protobuf:"varint,2,opt,name=sats,proto3" json:"sats,omitempty"`
	Altitude             float64        `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Inclination          float64        `protobuf:"fixed64,4,opt,name=inclination,proto3" json:"inclination,omitempty"`
	Arcofascendingsnodes float64        `protobuf:"fixed64,5,opt,name=arcofascendingsnodes,proto3" json:"arcofascendingsnodes,omitempty"`
	Eccentricity         float64        `protobuf:"fixed64,6,opt,name=eccentricity,proto3" json:"eccentricity,omitempty"`
	ActiveSats           []*SatelliteId `protobuf:"bytes,7,rep,name=activeSats,proto3" json:"activeSats,omitempty"`
	Network              *NetworkConfig `protobuf:"bytes,8,opt,name=network,proto3" json:"network,omitempty"`
	Compute              *ComputeConfig `protobuf:"bytes,9,opt,name=compute,proto3" json:"compute,omitempty"`
	Sgp4                 *SGP4Options   `protobuf:"bytes,10,opt,name=sgp4,proto3,oneof" json:"sgp4,omitempty"`
}

func (x *ShellInfo) Reset() {
	*x = ShellInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellInfo) ProtoMessage() {}

func (x *ShellInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellInfo.ProtoReflect.Descriptor instead.
func (*ShellInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{6}
}

func (x *ShellInfo) GetPlanes() uint32 {
	if x != nil {
		return x.Planes
	}
	return 0
}

func (x *ShellInfo) GetSats() uint32 {
	if x != nil {
		return x.Sats
	}
	return 0
}

func (x *ShellInfo) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *ShellInfo) GetInclination() float64 {
	if x != nil {
		return x.Inclination
	}
	return 0
}

func (x *ShellInfo) GetArcofascendingsnodes() float64 {
	if x != nil {
		return x.Arcofascendingsnodes
	}
	return 0
}

func (x *ShellInfo) GetEccentricity() float64 {
	if x != nil {
		return x.Eccentricity
	}
	return 0
}

func (x *ShellInfo) GetActiveSats() []*SatelliteId {
	if x != nil {
		return x.ActiveSats
	}
	return nil
}

func (x *ShellInfo) GetNetwork() *NetworkConfig {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *ShellInfo) GetCompute() *ComputeConfig {
	if x != nil {
		return x.Compute
	}
	return nil
}

func (x *ShellInfo) GetSgp4() *SGP4Options {
	if x != nil {
		return x.Sgp4
	}
	return nil
}

type SatelliteId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shell uint32 `protobuf:"varint,1,opt,name=shell,proto3" json:"shell,omitempty"`
	Sat   uint32 `protobuf:"varint,2,opt,name=sat,proto3" json:"sat,omitempty"`
}

func (x *SatelliteId) Reset() {
	*x = SatelliteId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SatelliteId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SatelliteId) ProtoMessage() {}

func (x *SatelliteId) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SatelliteId.ProtoReflect.Descriptor instead.
func (*SatelliteId) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{7}
}

func (x *SatelliteId) GetShell() uint32 {
	if x != nil {
		return x.Shell
	}
	return 0
}

func (x *SatelliteId) GetSat() uint32 {
	if x != nil {
		return x.Sat
	}
	return 0
}

type Pos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Pos) Reset() {
	*x = Pos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos) ProtoMessage() {}

func (x *Pos) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos.ProtoReflect.Descriptor instead.
func (*Pos) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{8}
}

func (x *Pos) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Pos) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Pos) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type SatelliteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position      *Pos                `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Active        bool                `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	ConnectedSats []*ConnectedSatInfo `protobuf:"bytes,3,rep,name=connectedSats,proto3" json:"connectedSats,omitempty"`
	ConnectedGST  []*GroundStationId  `protobuf:"bytes,4,rep,name=connectedGST,proto3" json:"connectedGST,omitempty"`
}

func (x *SatelliteInfo) Reset() {
	*x = SatelliteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SatelliteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SatelliteInfo) ProtoMessage() {}

func (x *SatelliteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SatelliteInfo.ProtoReflect.Descriptor instead.
func (*SatelliteInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{9}
}

func (x *SatelliteInfo) GetPosition() *Pos {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SatelliteInfo) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SatelliteInfo) GetConnectedSats() []*ConnectedSatInfo {
	if x != nil {
		return x.ConnectedSats
	}
	return nil
}

func (x *SatelliteInfo) GetConnectedGST() []*GroundStationId {
	if x != nil {
		return x.ConnectedGST
	}
	return nil
}

type ConnectedSatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sat       *SatelliteId `protobuf:"bytes,1,opt,name=sat,proto3" json:"sat,omitempty"`
	Distance  float64      `protobuf:"fixed64,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Delay     float64      `protobuf:"fixed64,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Bandwidth float64      `protobuf:"fixed64,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
}

func (x *ConnectedSatInfo) Reset() {
	*x = ConnectedSatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedSatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedSatInfo) ProtoMessage() {}

func (x *ConnectedSatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedSatInfo.ProtoReflect.Descriptor instead.
func (*ConnectedSatInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{10}
}

func (x *ConnectedSatInfo) GetSat() *SatelliteId {
	if x != nil {
		return x.Sat
	}
	return nil
}

func (x *ConnectedSatInfo) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ConnectedSatInfo) GetDelay() float64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *ConnectedSatInfo) GetBandwidth() float64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

type ConnectedGSTInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gst       *GroundStationId `protobuf:"bytes,1,opt,name=gst,proto3" json:"gst,omitempty"`
	Distance  float64          `protobuf:"fixed64,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Delay     float64          `protobuf:"fixed64,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Bandwidth float64          `protobuf:"fixed64,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
}

func (x *ConnectedGSTInfo) Reset() {
	*x = ConnectedGSTInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedGSTInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedGSTInfo) ProtoMessage() {}

func (x *ConnectedGSTInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedGSTInfo.ProtoReflect.Descriptor instead.
func (*ConnectedGSTInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectedGSTInfo) GetGst() *GroundStationId {
	if x != nil {
		return x.Gst
	}
	return nil
}

func (x *ConnectedGSTInfo) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ConnectedGSTInfo) GetDelay() float64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *ConnectedGSTInfo) GetBandwidth() float64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

type GroundStationId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroundStationId) Reset() {
	*x = GroundStationId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroundStationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundStationId) ProtoMessage() {}

func (x *GroundStationId) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundStationId.ProtoReflect.Descriptor instead.
func (*GroundStationId) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{12}
}

func (x *GroundStationId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GroundStationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position      *Pos                `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Latitude      float64             `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64             `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Network       *NetworkConfig      `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	Compute       *ComputeConfig      `protobuf:"bytes,5,opt,name=compute,proto3" json:"compute,omitempty"`
	ConnectedSats []*ConnectedSatInfo `protobuf:"bytes,6,rep,name=connectedSats,proto3" json:"connectedSats,omitempty"`
}

func (x *GroundStationInfo) Reset() {
	*x = GroundStationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroundStationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundStationInfo) ProtoMessage() {}

func (x *GroundStationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundStationInfo.ProtoReflect.Descriptor instead.
func (*GroundStationInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{13}
}

func (x *GroundStationInfo) GetPosition() *Pos {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *GroundStationInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GroundStationInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GroundStationInfo) GetNetwork() *NetworkConfig {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *GroundStationInfo) GetCompute() *ComputeConfig {
	if x != nil {
		return x.Compute
	}
	return nil
}

func (x *GroundStationInfo) GetConnectedSats() []*ConnectedSatInfo {
	if x != nil {
		return x.ConnectedSats
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceShell int32   `protobuf:"varint,1,opt,name=sourceShell,proto3" json:"sourceShell,omitempty"`
	SourceSat   uint32  `protobuf:"varint,2,opt,name=sourceSat,proto3" json:"sourceSat,omitempty"`
	TargetShell int32   `protobuf:"varint,3,opt,name=targetShell,proto3" json:"targetShell,omitempty"`
	TargetSat   uint32  `protobuf:"varint,4,opt,name=targetSat,proto3" json:"targetSat,omitempty"`
	Delay       float64 `protobuf:"fixed64,5,opt,name=delay,proto3" json:"delay,omitempty"`
	Distance    float64 `protobuf:"fixed64,6,opt,name=distance,proto3" json:"distance,omitempty"`
	Bandwidth   float64 `protobuf:"fixed64,7,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{14}
}

func (x *Segment) GetSourceShell() int32 {
	if x != nil {
		return x.SourceShell
	}
	return 0
}

func (x *Segment) GetSourceSat() uint32 {
	if x != nil {
		return x.SourceSat
	}
	return 0
}

func (x *Segment) GetTargetShell() int32 {
	if x != nil {
		return x.TargetShell
	}
	return 0
}

func (x *Segment) GetTargetSat() uint32 {
	if x != nil {
		return x.TargetSat
	}
	return 0
}

func (x *Segment) GetDelay() float64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *Segment) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Segment) GetBandwidth() float64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

type PathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceShell int32  `protobuf:"varint,1,opt,name=sourceShell,proto3" json:"sourceShell,omitempty"`
	SourceSat   uint32 `protobuf:"varint,2,opt,name=sourceSat,proto3" json:"sourceSat,omitempty"`
	TargetShell int32  `protobuf:"varint,3,opt,name=targetShell,proto3" json:"targetShell,omitempty"`
	TargetSat   uint32 `protobuf:"varint,4,opt,name=targetSat,proto3" json:"targetSat,omitempty"`
}

func (x *PathRequest) Reset() {
	*x = PathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathRequest) ProtoMessage() {}

func (x *PathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathRequest.ProtoReflect.Descriptor instead.
func (*PathRequest) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{15}
}

func (x *PathRequest) GetSourceShell() int32 {
	if x != nil {
		return x.SourceShell
	}
	return 0
}

func (x *PathRequest) GetSourceSat() uint32 {
	if x != nil {
		return x.SourceSat
	}
	return 0
}

func (x *PathRequest) GetTargetShell() int32 {
	if x != nil {
		return x.TargetShell
	}
	return 0
}

func (x *PathRequest) GetTargetSat() uint32 {
	if x != nil {
		return x.TargetSat
	}
	return 0
}

type PathInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []*Path `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *PathInfo) Reset() {
	*x = PathInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathInfo) ProtoMessage() {}

func (x *PathInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathInfo.ProtoReflect.Descriptor instead.
func (*PathInfo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{16}
}

func (x *PathInfo) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distance  float64    `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	Delay     float64    `protobuf:"fixed64,2,opt,name=delay,proto3" json:"delay,omitempty"`
	Bandwidth float64    `protobuf:"fixed64,3,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Segments  []*Segment `protobuf:"bytes,4,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{17}
}

func (x *Path) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Path) GetDelay() float64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *Path) GetBandwidth() float64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *Path) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

var File_database_proto protoreflect.FileDescriptor

var file_database_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63,
	0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x11,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x65, 0x6c, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x73, 0x12,
	0x58, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x53, 0x68, 0x65,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x65,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x22,
	0xb1, 0x01, 0x0a, 0x0b, 0x53, 0x47, 0x50, 0x34, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x73, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x62, 0x73, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x64, 0x6f,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6e, 0x64, 0x6f, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x72, 0x67, 0x70, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x72,
	0x67, 0x70, 0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x6c, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x69, 0x73, 0x6c,
	0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6d,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x61,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x6c,
	0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d,
	0x69, 0x6e, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x67,
	0x73, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x67, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x63, 0x70, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x63, 0x70, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x68, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x69, 0x73,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x74, 0x66, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66,
	0x73, 0x22, 0xff, 0x03, 0x0a, 0x09, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x69, 0x6e,
	0x63, 0x6c, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x72, 0x63,
	0x6f, 0x66, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x61, 0x72, 0x63, 0x6f, 0x66, 0x61, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x61, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x61, 0x74, 0x73, 0x12,
	0x48, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x73, 0x67, 0x70, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x53, 0x47, 0x50, 0x34, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x67, 0x70, 0x34, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73,
	0x67, 0x70, 0x34, 0x22, 0x35, 0x0a, 0x0b, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x61, 0x74, 0x22, 0x2f, 0x0a, 0x03, 0x50, 0x6f,
	0x73, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a,
	0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0x98, 0x02, 0x0a, 0x0d,
	0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63,
	0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x53, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x61, 0x74, 0x73,
	0x12, 0x54, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x53, 0x54,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x47, 0x53, 0x54, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x53, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x03, 0x73,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x74, 0x65, 0x6c,
	0x6c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x52, 0x03, 0x73, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0xa6, 0x01, 0x0a, 0x10,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x53, 0x54, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x42, 0x0a, 0x03, 0x67, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52,
	0x03, 0x67, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xfc, 0x02, 0x0a, 0x11,
	0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x48, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x12, 0x57, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x61,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x53, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x61, 0x74, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x07, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x61, 0x74, 0x22, 0x47, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22,
	0x9c, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x9e,
	0x04, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x62, 0x0a, 0x05, 0x53, 0x68, 0x65, 0x6c,
	0x6c, 0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x69, 0x0a, 0x09,
	0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x74, 0x65,
	0x6c, 0x6c, 0x69, 0x74, 0x65, 0x49, 0x64, 0x1a, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f,
	0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x75, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x32, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5f,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6f, 0x67, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_database_proto_rawDescOnce sync.Once
	file_database_proto_rawDescData = file_database_proto_rawDesc
)

func file_database_proto_rawDescGZIP() []byte {
	file_database_proto_rawDescOnce.Do(func() {
		file_database_proto_rawDescData = protoimpl.X.CompressGZIP(file_database_proto_rawDescData)
	})
	return file_database_proto_rawDescData
}

var file_database_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_database_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: openfogstack.celestial.database.Empty
	(*ConstellationInfo)(nil),     // 1: openfogstack.celestial.database.ConstellationInfo
	(*ShellRequest)(nil),          // 2: openfogstack.celestial.database.ShellRequest
	(*SGP4Options)(nil),           // 3: openfogstack.celestial.database.SGP4Options
	(*NetworkConfig)(nil),         // 4: openfogstack.celestial.database.NetworkConfig
	(*ComputeConfig)(nil),         // 5: openfogstack.celestial.database.ComputeConfig
	(*ShellInfo)(nil),             // 6: openfogstack.celestial.database.ShellInfo
	(*SatelliteId)(nil),           // 7: openfogstack.celestial.database.SatelliteId
	(*Pos)(nil),                   // 8: openfogstack.celestial.database.Pos
	(*SatelliteInfo)(nil),         // 9: openfogstack.celestial.database.SatelliteInfo
	(*ConnectedSatInfo)(nil),      // 10: openfogstack.celestial.database.ConnectedSatInfo
	(*ConnectedGSTInfo)(nil),      // 11: openfogstack.celestial.database.ConnectedGSTInfo
	(*GroundStationId)(nil),       // 12: openfogstack.celestial.database.GroundStationId
	(*GroundStationInfo)(nil),     // 13: openfogstack.celestial.database.GroundStationInfo
	(*Segment)(nil),               // 14: openfogstack.celestial.database.Segment
	(*PathRequest)(nil),           // 15: openfogstack.celestial.database.PathRequest
	(*PathInfo)(nil),              // 16: openfogstack.celestial.database.PathInfo
	(*Path)(nil),                  // 17: openfogstack.celestial.database.Path
	(*timestamppb.Timestamp)(nil), // 18: google.protobuf.Timestamp
}
var file_database_proto_depIdxs = []int32{
	12, // 0: openfogstack.celestial.database.ConstellationInfo.groundstations:type_name -> openfogstack.celestial.database.GroundStationId
	18, // 1: openfogstack.celestial.database.SGP4Options.starttime:type_name -> google.protobuf.Timestamp
	7,  // 2: openfogstack.celestial.database.ShellInfo.activeSats:type_name -> openfogstack.celestial.database.SatelliteId
	4,  // 3: openfogstack.celestial.database.ShellInfo.network:type_name -> openfogstack.celestial.database.NetworkConfig
	5,  // 4: openfogstack.celestial.database.ShellInfo.compute:type_name -> openfogstack.celestial.database.ComputeConfig
	3,  // 5: openfogstack.celestial.database.ShellInfo.sgp4:type_name -> openfogstack.celestial.database.SGP4Options
	8,  // 6: openfogstack.celestial.database.SatelliteInfo.position:type_name -> openfogstack.celestial.database.Pos
	10, // 7: openfogstack.celestial.database.SatelliteInfo.connectedSats:type_name -> openfogstack.celestial.database.ConnectedSatInfo
	12, // 8: openfogstack.celestial.database.SatelliteInfo.connectedGST:type_name -> openfogstack.celestial.database.GroundStationId
	7,  // 9: openfogstack.celestial.database.ConnectedSatInfo.sat:type_name -> openfogstack.celestial.database.SatelliteId
	12, // 10: openfogstack.celestial.database.ConnectedGSTInfo.gst:type_name -> openfogstack.celestial.database.GroundStationId
	8,  // 11: openfogstack.celestial.database.GroundStationInfo.position:type_name -> openfogstack.celestial.database.Pos
	4,  // 12: openfogstack.celestial.database.GroundStationInfo.network:type_name -> openfogstack.celestial.database.NetworkConfig
	5,  // 13: openfogstack.celestial.database.GroundStationInfo.compute:type_name -> openfogstack.celestial.database.ComputeConfig
	10, // 14: openfogstack.celestial.database.GroundStationInfo.connectedSats:type_name -> openfogstack.celestial.database.ConnectedSatInfo
	17, // 15: openfogstack.celestial.database.PathInfo.paths:type_name -> openfogstack.celestial.database.Path
	14, // 16: openfogstack.celestial.database.Path.segments:type_name -> openfogstack.celestial.database.Segment
	0,  // 17: openfogstack.celestial.database.Database.Constellation:input_type -> openfogstack.celestial.database.Empty
	2,  // 18: openfogstack.celestial.database.Database.Shell:input_type -> openfogstack.celestial.database.ShellRequest
	7,  // 19: openfogstack.celestial.database.Database.Satellite:input_type -> openfogstack.celestial.database.SatelliteId
	12, // 20: openfogstack.celestial.database.Database.GroundStation:input_type -> openfogstack.celestial.database.GroundStationId
	15, // 21: openfogstack.celestial.database.Database.Path:input_type -> openfogstack.celestial.database.PathRequest
	1,  // 22: openfogstack.celestial.database.Database.Constellation:output_type -> openfogstack.celestial.database.ConstellationInfo
	6,  // 23: openfogstack.celestial.database.Database.Shell:output_type -> openfogstack.celestial.database.ShellInfo
	9,  // 24: openfogstack.celestial.database.Database.Satellite:output_type -> openfogstack.celestial.database.SatelliteInfo
	13, // 25: openfogstack.celestial.database.Database.GroundStation:output_type -> openfogstack.celestial.database.GroundStationInfo
	16, // 26: openfogstack.celestial.database.Database.Path:output_type -> openfogstack.celestial.database.PathInfo
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_database_proto_init() }
func file_database_proto_init() {
	if File_database_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_database_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstellationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGP4Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SatelliteId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SatelliteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedSatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedGSTInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroundStationId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroundStationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_database_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_database_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_database_proto_goTypes,
		DependencyIndexes: file_database_proto_depIdxs,
		MessageInfos:      file_database_proto_msgTypes,
	}.Build()
	File_database_proto = out.File
	file_database_proto_rawDesc = nil
	file_database_proto_goTypes = nil
	file_database_proto_depIdxs = nil
}
