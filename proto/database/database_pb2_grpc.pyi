"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This file is part of Celestial (https://github.com/OpenFogStack/celestial).
Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
"""
import abc
import database_pb2
import grpc

class DatabaseStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Constellation: grpc.UnaryUnaryMultiCallable[
        database_pb2.Empty,
        database_pb2.ConstellationInfo,
    ]
    Shell: grpc.UnaryUnaryMultiCallable[
        database_pb2.ShellRequest,
        database_pb2.ShellInfo,
    ]
    Satellite: grpc.UnaryUnaryMultiCallable[
        database_pb2.SatelliteId,
        database_pb2.SatelliteInfo,
    ]
    GroundStation: grpc.UnaryUnaryMultiCallable[
        database_pb2.GroundStationId,
        database_pb2.GroundStationInfo,
    ]
    Path: grpc.UnaryUnaryMultiCallable[
        database_pb2.PathRequest,
        database_pb2.PathInfo,
    ]

class DatabaseServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Constellation(
        self,
        request: database_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> database_pb2.ConstellationInfo: ...
    @abc.abstractmethod
    def Shell(
        self,
        request: database_pb2.ShellRequest,
        context: grpc.ServicerContext,
    ) -> database_pb2.ShellInfo: ...
    @abc.abstractmethod
    def Satellite(
        self,
        request: database_pb2.SatelliteId,
        context: grpc.ServicerContext,
    ) -> database_pb2.SatelliteInfo: ...
    @abc.abstractmethod
    def GroundStation(
        self,
        request: database_pb2.GroundStationId,
        context: grpc.ServicerContext,
    ) -> database_pb2.GroundStationInfo: ...
    @abc.abstractmethod
    def Path(
        self,
        request: database_pb2.PathRequest,
        context: grpc.ServicerContext,
    ) -> database_pb2.PathInfo: ...

def add_DatabaseServicer_to_server(servicer: DatabaseServicer, server: grpc.Server) -> None: ...
