"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This file is part of Celestial (https://github.com/OpenFogStack/celestial).
Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _VMState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VMStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VMState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    VM_STATE_STOPPED: _VMState.ValueType  # 0
    VM_STATE_ACTIVE: _VMState.ValueType  # 1

class VMState(_VMState, metaclass=_VMStateEnumTypeWrapper): ...

VM_STATE_STOPPED: VMState.ValueType  # 0
VM_STATE_ACTIVE: VMState.ValueType  # 1
global___VMState = VMState

@typing_extensions.final
class MachineID(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    group: builtins.int
    id: builtins.int
    name: builtins.str
    """ignored for non-groundstations"""
    def __init__(
        self,
        *,
        group: builtins.int = ...,
        id: builtins.int = ...,
        name: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name", b"_name", "name", b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name", b"_name", "group", b"group", "id", b"id", "name", b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...

global___MachineID = MachineID

@typing_extensions.final
class Empty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Empty = Empty

@typing_extensions.final
class RegisterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    host: builtins.int
    def __init__(
        self,
        *,
        host: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["host", b"host"]) -> None: ...

global___RegisterRequest = RegisterRequest

@typing_extensions.final
class RegisterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AVAILABLE_CPUS_FIELD_NUMBER: builtins.int
    AVAILABLE_RAM_FIELD_NUMBER: builtins.int
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    available_cpus: builtins.int
    available_ram: builtins.int
    public_key: builtins.str
    def __init__(
        self,
        *,
        available_cpus: builtins.int = ...,
        available_ram: builtins.int = ...,
        public_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["available_cpus", b"available_cpus", "available_ram", b"available_ram", "public_key", b"public_key"]) -> None: ...

global___RegisterResponse = RegisterResponse

@typing_extensions.final
class InitRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Host(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        ADDR_FIELD_NUMBER: builtins.int
        PUBLICKEY_FIELD_NUMBER: builtins.int
        id: builtins.int
        addr: builtins.str
        publickey: builtins.str
        def __init__(
            self,
            *,
            id: builtins.int = ...,
            addr: builtins.str = ...,
            publickey: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["addr", b"addr", "id", b"id", "publickey", b"publickey"]) -> None: ...

    @typing_extensions.final
    class Machine(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class MachineConfig(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            VCPU_COUNT_FIELD_NUMBER: builtins.int
            RAM_FIELD_NUMBER: builtins.int
            DISK_SIZE_FIELD_NUMBER: builtins.int
            ROOT_IMAGE_FIELD_NUMBER: builtins.int
            KERNEL_FIELD_NUMBER: builtins.int
            BOOT_PARAMETERS_FIELD_NUMBER: builtins.int
            vcpu_count: builtins.int
            """should also be 8 bit but protobuf doesn't support uint8..."""
            ram: builtins.int
            disk_size: builtins.int
            root_image: builtins.str
            kernel: builtins.str
            @property
            def boot_parameters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
            def __init__(
                self,
                *,
                vcpu_count: builtins.int = ...,
                ram: builtins.int = ...,
                disk_size: builtins.int = ...,
                root_image: builtins.str = ...,
                kernel: builtins.str = ...,
                boot_parameters: collections.abc.Iterable[builtins.str] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["boot_parameters", b"boot_parameters", "disk_size", b"disk_size", "kernel", b"kernel", "ram", b"ram", "root_image", b"root_image", "vcpu_count", b"vcpu_count"]) -> None: ...

        ID_FIELD_NUMBER: builtins.int
        HOST_FIELD_NUMBER: builtins.int
        CONFIG_FIELD_NUMBER: builtins.int
        @property
        def id(self) -> global___MachineID: ...
        host: builtins.int
        """should actually be 8 bit but protobuf doesn't support uint8..."""
        @property
        def config(self) -> global___InitRequest.Machine.MachineConfig: ...
        def __init__(
            self,
            *,
            id: global___MachineID | None = ...,
            host: builtins.int = ...,
            config: global___InitRequest.Machine.MachineConfig | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["config", b"config", "id", b"id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["config", b"config", "host", b"host", "id", b"id"]) -> None: ...

    HOSTS_FIELD_NUMBER: builtins.int
    MACHINES_FIELD_NUMBER: builtins.int
    @property
    def hosts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InitRequest.Host]: ...
    @property
    def machines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InitRequest.Machine]: ...
    def __init__(
        self,
        *,
        hosts: collections.abc.Iterable[global___InitRequest.Host] | None = ...,
        machines: collections.abc.Iterable[global___InitRequest.Machine] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hosts", b"hosts", "machines", b"machines"]) -> None: ...

global___InitRequest = InitRequest

@typing_extensions.final
class UpdateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MachineDiff(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        ACTIVE_FIELD_NUMBER: builtins.int
        @property
        def id(self) -> global___MachineID: ...
        active: global___VMState.ValueType
        def __init__(
            self,
            *,
            id: global___MachineID | None = ...,
            active: global___VMState.ValueType = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["active", b"active", "id", b"id"]) -> None: ...

    @typing_extensions.final
    class NetworkDiff(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class Link(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            TARGET_FIELD_NUMBER: builtins.int
            LATENCY_FIELD_NUMBER: builtins.int
            BANDWIDTH_FIELD_NUMBER: builtins.int
            BLOCKED_FIELD_NUMBER: builtins.int
            NEXT_FIELD_NUMBER: builtins.int
            @property
            def target(self) -> global___MachineID: ...
            latency: builtins.int
            bandwidth: builtins.int
            blocked: builtins.bool
            @property
            def next(self) -> global___MachineID:
                """used for path reconstruction"""
            def __init__(
                self,
                *,
                target: global___MachineID | None = ...,
                latency: builtins.int = ...,
                bandwidth: builtins.int = ...,
                blocked: builtins.bool = ...,
                next: global___MachineID | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["next", b"next", "target", b"target"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["bandwidth", b"bandwidth", "blocked", b"blocked", "latency", b"latency", "next", b"next", "target", b"target"]) -> None: ...

        ID_FIELD_NUMBER: builtins.int
        LINKS_FIELD_NUMBER: builtins.int
        @property
        def id(self) -> global___MachineID: ...
        @property
        def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateRequest.NetworkDiff.Link]: ...
        def __init__(
            self,
            *,
            id: global___MachineID | None = ...,
            links: collections.abc.Iterable[global___UpdateRequest.NetworkDiff.Link] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "links", b"links"]) -> None: ...

    MACHINE_DIFFS_FIELD_NUMBER: builtins.int
    NETWORK_DIFFS_FIELD_NUMBER: builtins.int
    @property
    def machine_diffs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateRequest.MachineDiff]: ...
    @property
    def network_diffs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateRequest.NetworkDiff]: ...
    def __init__(
        self,
        *,
        machine_diffs: collections.abc.Iterable[global___UpdateRequest.MachineDiff] | None = ...,
        network_diffs: collections.abc.Iterable[global___UpdateRequest.NetworkDiff] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["machine_diffs", b"machine_diffs", "network_diffs", b"network_diffs"]) -> None: ...

global___UpdateRequest = UpdateRequest
