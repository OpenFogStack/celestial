/*
 * This file is part of Celestial (https://github.com/OpenFogStack/celestial).
 * Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 **/

syntax = "proto3";

package openfogstack.celestial.celestial;
option go_package = "./;celestial";

service Celestial {
  rpc GetHostInfo(Empty) returns (HostInfo);
  rpc HostReady(Empty) returns (ReadyInfo);
  rpc Init(InitRequest) returns (Empty);
  rpc InitRemotes(InitRemotesRequest) returns (Empty);
  rpc StartPeering(Empty) returns (Empty);
  rpc CreateMachine(CreateMachineRequest) returns (Empty);
  rpc ModifyMachine(ModifyMachineRequest) returns (Empty);
  rpc ModifyLinks(ModifyLinksRequest) returns (Empty);
}

message Empty {}

message HostInfo {
  uint64 cpu = 1;
  uint64 mem = 2;
}

message ReadyInfo {
  bool ready = 1;
  uint64 created = 2;
}

message Shell {
  uint64 id = 1;
  uint64 planes = 2;
}

message InitRequest {
  bool database = 1;
  string databaseHost = 2;
  uint64 shellcount = 3;
  repeated Shell shells = 4;
}

message RemoteHost {
  uint64 index = 1;
  string addr = 2;
}

message InitRemotesRequest {
  uint64 index = 1;
  repeated RemoteHost remotehosts = 2;
}

message Machine {
  // allow -1 for ground stations
  int64 shell = 1;
  uint64 id = 2;
  // name is only used for ground stations
  string name = 3;
}

message FirecrackerConfig {
  uint64 vcpu = 1;
  uint64 mem = 2;
  bool ht = 3;
  uint64 disk = 4;
  string kernel = 5;
  string rootfs = 6;
  string bootparams = 7;
}

message NetworkConfig { uint64 bandwidth = 1; }

message CreateMachineRequest {
  Machine machine = 1;
  FirecrackerConfig firecrackerconfig = 2;
  NetworkConfig networkconfig = 3;
  bool status = 4;
}

message CreateRemoteMachineRequest {
  Machine machine = 1;
  NetworkConfig networkconfig = 3;
}

message ModifyMachineRequest {
  Machine machine = 1;
  bool status = 2;
}

message ModifyLinksRequest {
  Machine a = 1;
  repeated RemoveLinkRequest remove = 2;
  repeated ModifyLinkRequest modify = 3;
}

message RemoveLinkRequest { Machine b = 2; }

message ModifyLinkRequest {
  Machine b = 2;
  double latency = 3;
  uint64 bandwidth = 4;
}
