"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This file is part of Celestial (https://github.com/OpenFogStack/celestial).
Copyright (c) 2021 Tobias Pfandzelter, The OpenFogStack Team.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
"""
import abc
import celestial_pb2
import grpc

class CelestialStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetHostInfo: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.Empty,
        celestial_pb2.HostInfo,
    ]
    HostReady: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.Empty,
        celestial_pb2.ReadyInfo,
    ]
    Init: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.InitRequest,
        celestial_pb2.Empty,
    ]
    InitRemotes: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.InitRemotesRequest,
        celestial_pb2.Empty,
    ]
    StartPeering: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.Empty,
        celestial_pb2.Empty,
    ]
    CreateMachine: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.CreateMachineRequest,
        celestial_pb2.Empty,
    ]
    ModifyMachine: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.ModifyMachineRequest,
        celestial_pb2.Empty,
    ]
    ModifyLinks: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.ModifyLinksRequest,
        celestial_pb2.Empty,
    ]

class CelestialServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetHostInfo(
        self,
        request: celestial_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.HostInfo: ...
    @abc.abstractmethod
    def HostReady(
        self,
        request: celestial_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.ReadyInfo: ...
    @abc.abstractmethod
    def Init(
        self,
        request: celestial_pb2.InitRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def InitRemotes(
        self,
        request: celestial_pb2.InitRemotesRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def StartPeering(
        self,
        request: celestial_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def CreateMachine(
        self,
        request: celestial_pb2.CreateMachineRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def ModifyMachine(
        self,
        request: celestial_pb2.ModifyMachineRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def ModifyLinks(
        self,
        request: celestial_pb2.ModifyLinksRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...

def add_CelestialServicer_to_server(servicer: CelestialServicer, server: grpc.Server) -> None: ...
