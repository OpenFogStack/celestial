"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This file is part of Celestial (https://github.com/OpenFogStack/celestial).
Copyright (c) 2024 Tobias Pfandzelter, The OpenFogStack Team.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
"""
import abc
import celestial_pb2
import collections.abc
import grpc

class CelestialStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Register: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.RegisterRequest,
        celestial_pb2.RegisterResponse,
    ]
    Init: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.InitRequest,
        celestial_pb2.Empty,
    ]
    Update: grpc.StreamUnaryMultiCallable[
        celestial_pb2.StateUpdateRequest,
        celestial_pb2.Empty,
    ]
    Stop: grpc.UnaryUnaryMultiCallable[
        celestial_pb2.Empty,
        celestial_pb2.Empty,
    ]

class CelestialServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Register(
        self,
        request: celestial_pb2.RegisterRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.RegisterResponse: ...
    @abc.abstractmethod
    def Init(
        self,
        request: celestial_pb2.InitRequest,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def Update(
        self,
        request_iterator: collections.abc.Iterator[celestial_pb2.StateUpdateRequest],
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...
    @abc.abstractmethod
    def Stop(
        self,
        request: celestial_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> celestial_pb2.Empty: ...

def add_CelestialServicer_to_server(servicer: CelestialServicer, server: grpc.Server) -> None: ...
